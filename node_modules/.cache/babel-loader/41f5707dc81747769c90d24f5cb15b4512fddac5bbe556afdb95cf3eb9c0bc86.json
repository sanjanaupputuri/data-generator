{"ast":null,"code":"const industries = [\"FinTech\", \"HealthTech\", \"EdTech\", \"E-commerce\", \"SaaS\", \"AI/ML\", \"IoT\", \"Blockchain\", \"GreenTech\", \"FoodTech\"];\nconst stages = [\"Pre-seed\", \"Seed\", \"Series A\", \"Series B\", \"Series C\"];\nconst locations = [\"San Francisco\", \"New York\", \"Austin\", \"Boston\", \"Seattle\", \"Los Angeles\", \"Chicago\", \"Miami\", \"Denver\", \"Atlanta\"];\nconst businessModels = [\"B2B\", \"B2C\", \"B2B2C\", \"Marketplace\", \"Subscription\", \"Freemium\"];\nconst getRandomItem = array => array[Math.floor(Math.random() * array.length)];\nconst getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\nexport const generateStartup = (filters = {}) => {\n  const foundedDate = new Date(Date.now() - getRandomNumber(30, 2000) * 24 * 60 * 60 * 1000);\n  return {\n    id: Math.random().toString(36).substr(2, 9),\n    name: `${getRandomItem(['Tech', 'Smart', 'Digital', 'Cloud', 'Data', 'AI'])}${getRandomItem(['Hub', 'Labs', 'Solutions', 'Works', 'Pro', 'Flow'])}`,\n    industry: filters.industry || getRandomItem(industries),\n    stage: filters.stage || getRandomItem(stages),\n    location: filters.location || getRandomItem(locations),\n    foundedDate: foundedDate.toISOString().split('T')[0],\n    employees: getRandomNumber(filters.minEmployees || 2, filters.maxEmployees || 500),\n    fundingRaised: getRandomNumber(filters.minFunding || 50000, filters.maxFunding || 50000000),\n    businessModel: filters.businessModel || getRandomItem(businessModels),\n    revenue: Math.random() > 0.3 ? getRandomNumber(0, filters.maxRevenue || 10000000) : 0,\n    isProfitable: Math.random() > 0.5,\n    website: `www.${getRandomItem(['tech', 'smart', 'digital'])}${getRandomNumber(100, 999)}.com`\n  };\n};\nexport const generateBatch = (count, filters = {}) => {\n  return Array.from({\n    length: count\n  }, () => generateStartup(filters));\n};\nexport const getOptions = () => ({\n  industries,\n  stages,\n  locations,\n  businessModels\n});","map":{"version":3,"names":["industries","stages","locations","businessModels","getRandomItem","array","Math","floor","random","length","getRandomNumber","min","max","generateStartup","filters","foundedDate","Date","now","id","toString","substr","name","industry","stage","location","toISOString","split","employees","minEmployees","maxEmployees","fundingRaised","minFunding","maxFunding","businessModel","revenue","maxRevenue","isProfitable","website","generateBatch","count","Array","from","getOptions"],"sources":["/home/sanjana/data/src/utils/startupGenerator.js"],"sourcesContent":["const industries = [\"FinTech\", \"HealthTech\", \"EdTech\", \"E-commerce\", \"SaaS\", \"AI/ML\", \"IoT\", \"Blockchain\", \"GreenTech\", \"FoodTech\"];\nconst stages = [\"Pre-seed\", \"Seed\", \"Series A\", \"Series B\", \"Series C\"];\nconst locations = [\"San Francisco\", \"New York\", \"Austin\", \"Boston\", \"Seattle\", \"Los Angeles\", \"Chicago\", \"Miami\", \"Denver\", \"Atlanta\"];\nconst businessModels = [\"B2B\", \"B2C\", \"B2B2C\", \"Marketplace\", \"Subscription\", \"Freemium\"];\n\nconst getRandomItem = (array) => array[Math.floor(Math.random() * array.length)];\nconst getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\nexport const generateStartup = (filters = {}) => {\n  const foundedDate = new Date(Date.now() - getRandomNumber(30, 2000) * 24 * 60 * 60 * 1000);\n  \n  return {\n    id: Math.random().toString(36).substr(2, 9),\n    name: `${getRandomItem(['Tech', 'Smart', 'Digital', 'Cloud', 'Data', 'AI'])}${getRandomItem(['Hub', 'Labs', 'Solutions', 'Works', 'Pro', 'Flow'])}`,\n    industry: filters.industry || getRandomItem(industries),\n    stage: filters.stage || getRandomItem(stages),\n    location: filters.location || getRandomItem(locations),\n    foundedDate: foundedDate.toISOString().split('T')[0],\n    employees: getRandomNumber(filters.minEmployees || 2, filters.maxEmployees || 500),\n    fundingRaised: getRandomNumber(filters.minFunding || 50000, filters.maxFunding || 50000000),\n    businessModel: filters.businessModel || getRandomItem(businessModels),\n    revenue: Math.random() > 0.3 ? getRandomNumber(0, filters.maxRevenue || 10000000) : 0,\n    isProfitable: Math.random() > 0.5,\n    website: `www.${getRandomItem(['tech', 'smart', 'digital'])}${getRandomNumber(100, 999)}.com`\n  };\n};\n\nexport const generateBatch = (count, filters = {}) => {\n  return Array.from({ length: count }, () => generateStartup(filters));\n};\n\nexport const getOptions = () => ({\n  industries,\n  stages,\n  locations,\n  businessModels\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}